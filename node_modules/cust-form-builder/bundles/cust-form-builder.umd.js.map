{"version":3,"file":"cust-form-builder.umd.js.map","sources":["ng://cust-form-builder/lib/actionService/action.service.ts","ng://cust-form-builder/lib/computedValueService/computed-value.service.ts","ng://cust-form-builder/lib/conditionService/condition.service.ts","ng://cust-form-builder/lib/extValidService/external-validation.service.ts","ng://cust-form-builder/lib/regexService/regex.service.ts","ng://cust-form-builder/lib/prerend.ts","ng://cust-form-builder/lib/importForm.ts","ng://cust-form-builder/lib/cust-form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService {\n\n  constructor() { }\n\n  externalAction(metadata: any, originalMethod: any) {\n    var action = \"/**\\n\";\n    var parameters = [];\n    var i = 0;\n    for (var key in metadata.parameters) {\n      action += \"* @param {\" + metadata.parameters[key] + \"} \" + key + \"\\n\";\n      parameters.push({ [key]: metadata.args[i] });\n      i++;\n    }\n    action += \"* @returns {\" + metadata.returnType + \"}\\n*/\\n(\" + originalMethod.toString() + \")();\";\n\n    return JSON.stringify({\n      actionName: metadata.actionName,\n      action: action,\n      parameters: parameters,\n      args: metadata.args\n    });\n  }\n\n\n  actionFromPackage(metadata: any) {\n    return JSON.stringify({\n      package: metadata.package,\n      parameters: metadata.parameters\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComputedValueService {\n\n  constructor() { }\n\n  concat(...values: string[]) {\n    var result = {\n      bind: {\n        values: [],\n        operator: \"concat\"\n      }\n    };\n    for (var i in values) {\n      result.bind.values.push(values[i]);\n    }\n    return JSON.stringify(result);\n  }\n\n  add(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"add\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n  substract(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"substract\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n  multiply(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"multiply\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConditionService {\n\n  constructor() { }\n\n  condition(cond: any) {\n    var origMethod = cond.toString();\n    var lines = origMethod.substring(origMethod.indexOf(\"{\") + 1, origMethod.lastIndexOf(\"}\")).split(\"\\n\");\n    var result = [];\n    var conditionVal = null;\n    var val = null;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (lines[i].trim().startsWith(\"if\")) {\n        conditionVal = lines[i].substring(lines[i].indexOf(\"\\\"\") + 1, lines[i].lastIndexOf(\"\\\"\"));\n        val = lines[i + 1].substring(lines[i + 1].indexOf(\"\\\"\") + 1, lines[i + 1].lastIndexOf(\"\\\"\"));\n\n        if (conditionVal == \"true\") {\n          conditionVal = true;\n        }\n        if (conditionVal == \"false\") {\n          conditionVal = false;\n        }\n        if (val == \"true\") {\n          val = true;\n        }\n        if (val == \"false\") {\n          val = false;\n        }\n\n        result.push({\n          [lines[i].substring(lines[i].indexOf(\".\") + 1, lines[i].lastIndexOf(\"(\"))]: {\n            [lines[i].substring(lines[i].indexOf(\"(\") + 1, lines[i].indexOf(\".\"))]:\n              conditionVal\n          },\n          value: val\n        });\n      }\n    }\n    return JSON.stringify(result);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalValidationService {\n\n  constructor() { }\n\n  externalValidation(extValObj: any){\n    //TODO: Not embedded action\n    return JSON.stringify({\n      target: extValObj.targetFields,\n      source: extValObj.validationAction,\n      label: extValObj.label\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegexService {\n\n  constructor() { }\n\n  regex(pattern: string, message?: string) {\n    return JSON.stringify({\n      pattern: {\n        value: pattern,\n        message: message || \"\"\n      }\n    });\n  }\n}\n","export function prerend() {\n    require('zone.js/dist/zone-node');\n    require('reflect-metadata');\n    const { renderModuleFactory } = require('@angular/platform-server');\n\n    const htmlparser = require(\"htmlparser2\");\n\n    // Models Declarations\n    var Layout = function () {\n        this.pages = [];\n    }\n\n    Layout.prototype.addPage = function (page) {\n        this.pages.push(page);\n    };\n\n    Layout.prototype.getPage = function (id) {\n        for (var i in this.pages) {\n            if (this.pages[i].id == id) {\n                return this.pages[i];\n            }\n        }\n        return null;\n    };\n\n    /******************************************/\n\n    var Canvas = function () {\n        this.layout = new Layout();\n        this.schema = {};\n        this.options = {};\n    };\n\n    /******************************************/\n\n    var Page = function (id, sections, title, state) {\n        this.id = id;\n        this.sections = sections;\n        this.title = title;\n        this.state = state;\n    }\n\n    Page.prototype.addSection = function (section) {\n        this.sections.push(section);\n    }\n\n    Page.prototype.getSection = function (id) {\n        for (var i in this.sections) {\n            if (this.sections[i].id == id) {\n                return this.sections[i];\n            }\n        }\n        return null;\n    }\n\n    Page.prototype.setTitle = function (title) {\n        this.title = title;\n    }\n\n    /******************************************/\n\n    var Field = function (id, display, state) {\n        this.id = id;\n        this.display = display;\n        this.state = state;\n    }\n\n    /******************************************/\n\n    var FieldSchema = function (type, constraints, label, placeholder, valueList) {\n        this.type = type;\n        this.constraints = constraints || {};\n        this.label = label || undefined;\n        this.placeholder = placeholder || undefined;\n        this.valueList = valueList || undefined;\n    }\n\n    /******************************************/\n\n    var State = function () {\n        this.visible = true;\n        this[\"read-only\"] = false;\n    }\n\n    /******************************************/\n\n    var Section = function (id, fields) {\n        this.id = id;\n        this.fields = fields;\n    }\n\n    Section.prototype.addField = function (field) {\n        this.fields.push(field);\n    }\n\n    Section.prototype.getField = function (id) {\n        for (var i in this.fields) {\n            if (this.fields[i].id == id) {\n                return this.fields[i];\n            }\n        }\n        return null;\n    }\n\n    /******************************************/\n\n    // UTILITY FUNCTIONS\n    var returnID = function (attribID, type) {\n        if (attribID == undefined || attribID == \"\") {\n            let id = type + '_', r = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (let i = 0; i < 8; i++) {\n                id += r.charAt(Math.floor(Math.random() * r.length));\n            }\n            return id;\n        }\n        else {\n            return attribID;\n        }\n    };\n\n    /******************************************/\n\n    var valueSource = function (source, fs, path) {\n        if (IsJsonString(source)) {\n            var sourceObj = JSON.parse(source);\n            if (sourceObj.hasOwnProperty('actionName')) {\n                const convert = require('xml-js');\n                try {\n                    var xml = fs.readFileSync('../pom.xml');\n                }\n                catch (e) {\n                    console.log('valueSource() reading pom.xml:' + e);\n                }\n                var options = {\n                    ignoreComment: true,\n                    compact: true,\n                    ignoreDoctype: true,\n                    ignoreCdata: true,\n                    ignoreAttributes: true,\n                    ignoreInstruction: true,\n                    ignoreDeclaration: true,\n                };\n                var parsed = convert.xml2js(xml, options);\n                var grpartID = parsed.project.groupId._text + '/' + parsed.project.artifactId._text;\n                var packageInPathFormat = grpartID.replace(/\\./g, '/') + '/';\n\n                try {\n                    fs.writeFileSync(path.join('actions/src/main/resources/' + packageInPathFormat, sourceObj.actionName + '.js'), sourceObj.action);\n                }\n                catch (e) {\n                    console.log('valueSource() writing action files:' + e)\n                }\n                var result = {\n                    type: \"scriptAction\",\n                    id: grpartID + \"/\" + sourceObj.actionName,\n                    parameters: sourceObj.parameters\n                }\n                return result;\n\n            }\n            //Check if it's a path to action\n            else if (sourceObj.hasOwnProperty('package')) {\n                return {\n                    type: \"scriptAction\",\n                    id: sourceObj.package,\n                    parameters: sourceObj.parameters\n                }\n            }\n\n            //Checks if it's condition or computed value OR it's Action From Imported Custom Form\n            else if (sourceObj.hasOwnProperty('bind') || sourceObj.hasOwnProperty('type')) {\n                return sourceObj;\n            }\n\n        }\n        // If source is some kind of const\n        if (source == \"true\") {\n            return true;\n        }\n        else if (source == \"false\") {\n            return false;\n        }\n        else if (source.startsWith(\"[{\") || source.startsWith(\"{\") || source.startsWith(\"['\")) {\n            try {\n                return JSON.parse(source.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"valueSource() ---> else if (source.startsWith...: \", e);\n            }\n\n        }\n        else if (isNaN(parseInt(source))) {\n            return source;\n        }\n        else {\n            return parseInt(source);\n        }\n    }\n\n    function IsJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    /******************************************/\n\n    const checkAttributes = function (attribs, field, id, canvas, fs, path) {\n        if (attribs.visibility) {\n            field.state.visible = valueSource(attribs.visibility, fs, path);\n        }\n        if (attribs.readonly) {\n            field.state[\"read-only\"] = valueSource(attribs.readonly, fs, path);\n        }\n        if (attribs.value) {\n            canvas.schema[id].default = valueSource(attribs.value, fs, path);\n        }\n        if (attribs.valueList) {\n\n            canvas.schema[id].valueList = valueSource(attribs.valueList, fs, path);\n        }\n        if (attribs.bind) {\n            if (attribs.bind.startsWith('{')) {\n                try {\n                    canvas.schema[id].default = {\n                        bind: JSON.parse(attribs.bind.replace(/\\'/g, '\\\"'))\n                    }\n                } catch (e) {\n                    console.log(\"checkAttributes() ---> attribs.bind\", e);\n                }\n            }\n            else {\n                canvas.schema[id].default = {\n                    bind: attribs.bind\n                }\n            }\n\n        }\n        if (attribs.signpost) {\n            canvas.schema[id].signpost = attribs.signpost;\n        }\n        if (attribs.description) {\n            canvas.schema[id].description = attribs.description;\n        }\n\n        //  Constraints\n        if (attribs.required) {\n            canvas.schema[id].constraints.required = valueSource(attribs.required, fs, path);\n        }\n        if (attribs.regex) {\n            try {\n                var regexObj = JSON.parse(attribs.regex.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"checkAttributes() ---> attribs.regex\", e);\n            }\n            // Object.assign(canvas.schema[id].constraints, regexObj);\n            canvas.schema[id].constraints[\"pattern\"] = regexObj;\n        }\n        if (attribs.min) {\n            canvas.schema[id].constraints[\"min-value\"] = valueSource(attribs.min, fs, path);\n        }\n        if (attribs.max) {\n            canvas.schema[id].constraints[\"max-value\"] = valueSource(attribs.max, fs, path);\n        }\n        if (attribs.match) {\n            canvas.schema[id].constraints.match = attribs.match;\n        }\n\n        if (!attribs.multiple || attribs.multiple == \"false\") {\n            canvas.schema[id].type.isMultiple = false;\n        }\n\n        //External Validation\n        if (attribs.options) {\n\n            try {\n                var extVal = JSON.parse(attribs.options.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"checkAttributes() ---> attribs.options\", e);\n            }\n\n            extVal.source = valueSource(JSON.stringify(extVal.source), fs, path);\n            canvas.options[\"externalValidations\"] = [];\n            canvas.options[\"externalValidations\"].push(extVal);\n\n        }\n    }\n\n    /******************************************/\n\n    // JSON FORM GENERATION FUNCTION\n    var generateJSONForm = function (canvas, fs, path, html) {\n        canvas = new Canvas();\n        var formName = \"\";\n        var currentPage = null;\n        var currentSection = null;\n        var currentSelect = null;\n        var options = [];\n\n        //      Variables for DataGrid\n        var trID = null;\n        var dgLabels = [];\n        var dgIDs = [];\n        var dgTypes = [];\n        var dgData = [];\n        var currentDatagrid = null;\n\n\n\n        var parser = new htmlparser.Parser({\n\n            onopentag: function (name, attribs) {\n                var field = null;\n                var id = \"\";\n                var state = new State();\n\n                switch (name) {\n                    //The Form\n                    case \"div\":\n                        if (attribs.class == \"custom-form\") {\n                            formName = attribs.name;\n                        }\n                        else {\n                            formName = \"defautFormName\";\n                        }\n                        break;\n\n                    //  Page/Tab\n                    case \"form\":\n                        if (currentPage == null) {\n                            currentPage = new Page(attribs.id || \"General\", [], attribs.title || \"General\", {});\n                        } else {\n                            currentPage = new Page(returnID(attribs.id, \"page\"), [], attribs.title || \"New Tab\", {});\n                        }\n                        if (attribs.visibility) {\n                            currentPage.state.visible = valueSource(attribs.visibility, fs, path);\n                        }\n                        canvas.layout.addPage(currentPage);\n                        break;\n\n                    //  Section    \n                    case \"section\":\n                        currentSection = new Section(returnID(attribs.id, \"section\"), []);\n                        canvas.layout.getPage(currentPage.id).addSection(currentSection);\n                        break;\n\n\n                    case \"input\":\n                        switch (attribs.type) {\n\n                            //  Text Field\n                            case \"text\":\n                                id = returnID(attribs.id, \"textField\");\n                                field = new Field(id, \"textField\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n\n                            // Password Field\n                            case \"password\":\n                                id = returnID(attribs.id, \"passwordField\");\n                                field = new Field(id, \"passwordField\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"secureString\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n\n                            // Decimal or Integer Field\n                            case \"number\":\n                                if (attribs.step && attribs.step.startsWith(\"0.\")) {\n                                    id = returnID(attribs.id, \"decimalField\");\n                                    field = new Field(id, \"decimalField\", state);\n                                    canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                    canvas.schema[id] = new FieldSchema({ dataType: \"decimal\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                    checkAttributes(attribs, field, id, canvas, fs, path);\n                                    canvas.schema[id].step = parseInt(attribs.step);\n                                }\n                                else {\n                                    id = returnID(attribs.id, \"integerField\");\n                                    field = new Field(id, \"integerField\", state);\n                                    canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                    canvas.schema[id] = new FieldSchema({ dataType: \"integer\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                    checkAttributes(attribs, field, id, canvas, fs, path);\n                                    canvas.schema[id].step = parseInt(attribs.step) || 1;\n                                }\n                                break;\n\n                            // CheckBox\n\n                            case \"checkbox\":\n                                id = returnID(attribs.id, \"checkbox\");\n                                field = new Field(id, \"checkbox\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"boolean\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n                        }\n                        break;\n\n                    //  Text Area\n                    case \"textarea\":\n                        id = returnID(attribs.id, \"textArea\");\n                        field = new Field(id, \"textArea\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Text / Label\n                    case \"label\":\n                        id = returnID(attribs.id, \"text\");\n                        field = new Field(id, \"text\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Image\n                    case \"img\":\n                        id = returnID(attribs.id, \"image\");\n                        field = new Field(id, \"image\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n\n                    //  DATAGRID\n                    case \"table\":\n                        var field = null;\n                        id = returnID(attribs.id, \"datagrid\");\n                        currentDatagrid = id;\n                        field = new Field(id, \"datagrid\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"complex\", \"fields\": [], isMultiple: true }, {}, attribs.label, attribs.placeholder, options);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    case \"tr\":\n                        trID = attribs.id;\n                        if (attribs.value) {\n                            canvas.schema[currentDatagrid].default = valueSource(attribs.value, fs, path);\n                        }\n                        // TODO: TEST\n                        break;\n\n                    case \"th\":\n                        dgIDs.push(attribs.id);\n                        dgTypes.push(attribs.type);\n                        break\n\n                    case \"td\":\n                        break;\n\n                    //  Multiselect or Dropdown\n                    case \"select\":\n\n                        if (attribs.multiple == \"true\") {\n                            currentSelect = id = returnID(attribs.id, \"multiSelect\");\n                            field = new Field(id, \"multiSelect\", state);\n                            canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                            canvas.schema[id] = new FieldSchema({ dataType: \"string\", isMultiple: true }, {}, attribs.label, attribs.placeholder, options);\n                        }\n                        else {\n                            currentSelect = id = returnID(attribs.id, \"dropDown\");\n                            field = new Field(id, \"dropDown\", state);\n                            canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                            canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, options);\n                        }\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Value Picker\n                    case \"search\":\n                        id = returnID(attribs.id, \"valuePicker\");\n                        field = new Field(id, \"valuePicker\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"reference\", referenceType: attribs.referenceType }, {}, attribs.label, attribs.placeholder, options || []);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Date Time Picker\n                    case \"date\":\n                        id = returnID(attribs.id, \"dateTime\");\n                        field = new Field(id, \"dateTime\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"dateTime\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n                }\n            },\n            ontext: function (text) {\n                //      SELECT & MULTISELECT OPTIONS\n                if (currentSelect != null) {\n                    options.push(valueSource(text, fs, path));\n                }\n                //      DATAGRID\n                if (trID == \"cols\") {\n                    dgLabels.push(valueSource(text, fs, path));\n                }\n                if (trID == \"data\") {\n                    dgData.push(valueSource(text, fs, path));\n                }\n\n            },\n            onclosetag: function (tagname) {\n                if (tagname === \"select\" && options.length > 0) {\n                    canvas.schema[currentSelect].valueList = options;\n                    currentSelect = null;\n                    options = [];\n                }\n\n                //      DATAGRID\n\n                if (tagname === \"table\") {\n                    canvas.schema[currentDatagrid][\"type\"][\"fields\"] = [];\n                    canvas.schema[currentDatagrid][\"default\"] = [];\n                    for (var i in dgLabels) {\n                        canvas.schema[currentDatagrid][\"type\"][\"fields\"].push(\n                            {\n                                \"label\": dgLabels[i],\n                                \"id\": dgIDs[i],\n                                \"type\": {\n                                    \"dataType\": dgTypes[i]\n                                }\n                            });\n                    }\n                    var cnt = 0;\n                    var data = {};\n                    for (var j in dgData) {\n                        data[dgIDs[cnt]] = dgData[j];\n                        cnt++;\n                        if (cnt > 2) {\n                            cnt = 0;\n                            canvas.schema[currentDatagrid][\"default\"].push(data);\n                            data = {};\n                        }\n                    }\n\n                    currentDatagrid = null;\n                    dgIDs = [];\n                    dgData = [];\n                    dgLabels = [];\n                    dgTypes = [];\n                }\n\n            }\n\n        }, { decodeEntities: true });\n\n        parser.write(html);\n        parser.end();\n\n        return {\n            name: formName,\n            form: canvas\n        };\n\n\n    }\n\n\n    /******************************************/\n\n    // PRERENDER\n    const fs = require('fs');\n    const path = require('path');\n    const { AppServerModuleNgFactory } = require('../../../dist/custom-form-server/main');\n\n    renderModuleFactory(AppServerModuleNgFactory, {\n        document: '<app-root></app-root>',\n        url: '/'\n    })\n        .then(html => {\n            var generated = generateJSONForm(canvas, fs, path, html);\n            var canvas = generated.form;\n            var name = generated.name;\n            try {\n                fs.writeFileSync(path.join('bin/', name + '.json'), JSON.stringify(canvas));\n            }\n            catch (e) {\n                console.log('renderModuleFactory creating the custom form json file: ' + e);\n            }\n        })\n        .catch((err) => {\n            console.log(err.message)\n        });\n}\n","export function importForm(formPath) {\n    const fsys = require('fs');\n    const pathh = require('path');\n\n    try {\n        var form = JSON.parse(fsys.readFileSync(`${formPath}.json`, 'utf8'));\n    }\n    catch (e) {\n        console.log('ERROR importForm() reading the custom form json file :' + e);\n    }\n    var htmlForm = `<div class=\"custom-form\" name=\"${formPath.substring(formPath.lastIndexOf('/') + 1)}\">`;\n\n    for (var page in form['layout']['pages']) {\n        htmlForm += `<form id=\"${form['layout']['pages'][page]['id']}\" title=\"${form['layout']['pages'][page]['title']}\"`;\n        if (form['layout']['pages'][page]['state']['visible']) {\n            htmlForm += ` visibility=\"${form['layout']['pages'][page]['state']['visible']}\"`;\n        }\n        htmlForm += `>`;\n        for (var section in form['layout']['pages'][page]['sections']) {\n            htmlForm += `<section id=\"${form['layout']['pages'][page]['sections'][section]['id']}\">`;\n            for (var field in form['layout']['pages'][page]['sections'][section]['fields']) {\n\n                var fieldID = form['layout']['pages'][page]['sections'][section]['fields'][field]['id'];\n                var basicAttributes = `id=\"${fieldID}\"\n                    visibility=\"${JSON.stringify(form['layout']['pages'][page]['sections'][section]['fields'][field]['state']['visible']).replace(/\\\"/g, '\\'')}\"\n                    readonly=\"${JSON.stringify(form['layout']['pages'][page]['sections'][section]['fields'][field]['state']['read-only']).replace(/\\\"/g, '\\'')}\"`;\n                var closingTag = ``;\n                var fieldType = form['layout']['pages'][page]['sections'][section]['fields'][field]['display'];\n\n\n                switch (fieldType) {\n                    case 'text':\n                        htmlForm += `<label ` + basicAttributes;\n                        closingTag = `</label>`\n                        break;\n                    case 'textArea':\n                        htmlForm += `<textarea ` + basicAttributes;\n                        closingTag = `</textarea>`;\n                        break;\n                    case 'textField':\n                        htmlForm += `<input type=\"text\" ` + basicAttributes;\n                        break;\n                    case 'passwordField':\n                        htmlForm += `<input type=\"password\" ` + basicAttributes;\n                        break;\n                    case 'decimalField':\n                        htmlForm += `<input type=\"number\" step =\"0.\"` + basicAttributes;\n                        break;\n                    case 'integerField':\n                        htmlForm += `<input type=\"number\" ` + basicAttributes;\n                        break;\n                    case 'image':\n                        htmlForm += `<img ` + basicAttributes;\n                        break;\n                    case 'checkbox':\n                        htmlForm += `<input type=\"checkbox\" ` + basicAttributes;\n                        break;\n                    case 'dropDown':\n                        htmlForm += `<select ` + basicAttributes;\n                        closingTag = `</select>`\n                        break;\n                    case 'multiSelect':\n                        htmlForm += `<select multiple=\"true\" ` + basicAttributes;\n                        closingTag = `</select>`\n                        break;\n                    case 'datagrid':\n                        htmlForm += `<table ` + basicAttributes;\n                        closingTag = `</table>`\n                        break;\n                }\n\n                if (form['schema'][fieldID]['constraints']) {\n                    if (form['schema'][fieldID]['constraints']['required']) {\n                        htmlForm += ` required=\"${JSON.stringify(form['schema'][fieldID]['constraints']['required']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['min-value']) {\n                        htmlForm += ` min=\"${JSON.stringify(form['schema'][fieldID]['constraints']['min-value']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['max-value']) {\n                        htmlForm += ` max=\"${JSON.stringify(form['schema'][fieldID]['constraints']['max-value']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['pattern']) {\n                        htmlForm += ` regex=\"${JSON.stringify({\n                            value: form['schema'][fieldID]['constraints']['pattern']['value'],\n                            message: form['schema'][fieldID]['constraints']['pattern']['message']\n                        }).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['match']) {\n                        htmlForm += ` match=\"${JSON.stringify(form['schema'][fieldID]['constraints']['match']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n\n                }\n                if (form['schema'][fieldID]['default']) {\n                    if (form['schema'][fieldID]['default']['type'] == 'scriptAction' ||\n                        Array.isArray(form['schema'][fieldID]['default'])) {\n                        htmlForm += ` value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '\\'')}\"`;\n                        // .replace(/\\{/g, '{{ \\'{\\' }}').replace(/\\}/g, '{{ \\'}\\' }}')}\"`;\n                    }\n                    else if (form['schema'][fieldID]['default']['bind']) {\n                        if (JSON.stringify(form['schema'][fieldID]['default']['bind']).startsWith('{')) {\n                            htmlForm += ` bind=\"${JSON.stringify(form['schema'][fieldID]['default']['bind']).replace(/\\\"/g, '\\'')}\"`;\n                        }\n                        else {\n                            htmlForm += ` bind=\"${JSON.stringify(form['schema'][fieldID]['default']['bind']).replace(/\\\"/g, '')}\"`;\n                        }\n\n                    }\n                    else {\n                        htmlForm += ` value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '')}\"`;\n                    }\n                }\n                if (form['schema'][fieldID]['valueList']) {\n\n                    if (form['schema'][fieldID]['valueList']['type'] == 'scriptAction') {\n                        htmlForm += ` valueList=\"${JSON.stringify(form['schema'][fieldID]['valueList']).replace(/\\\"/g, '\\'')}\"`;\n                        // .replace(/\\{/g, '{{ \\'{\\' }}').replace(/\\}/g, '{{ \\'}\\' }}')}\"`;\n                    }\n                    else {\n                        var valueList = ``;\n                        for (var opt in form['schema'][fieldID]['valueList']) {\n                            if (form['schema'][fieldID]['valueList'][opt]['label']) {\n                                valueList += `<option label=\"${form['schema'][fieldID]['valueList'][opt]['label']}\">${form['schema'][fieldID]['valueList'][opt]['label']}</option>`;\n                            }\n                            else {\n                                valueList += `<option>${JSON.stringify(form['schema'][fieldID]['valueList'][opt]).replace(/\\\"/g, '')}</option>`;\n                            }\n\n                        }\n                    }\n\n                }\n\n                if (form['schema'][fieldID]['label']) {\n                    htmlForm += ` label=\"${form['schema'][fieldID]['label']}\"`;\n                }\n                if (form['schema'][fieldID]['description']) {\n                    htmlForm += ` description=\"${JSON.stringify(form['schema'][fieldID]['description']).replace(/\\\"/g, '')}\"`;\n                }\n                if (form['schema'][fieldID]['signpost']) {\n                    htmlForm += ` signpost=\"${JSON.stringify(form['schema'][fieldID]['signpost']).replace(/\\\"/g, '\\'')}\"`;\n                }\n                if (form['schema'][fieldID]['step']) {\n                    htmlForm += ` step=\"${JSON.stringify(form['schema'][fieldID]['step']).replace(/\\\"/g, '\\'')}\"`;\n                }\n                if (form['schema'][fieldID]['placeholder']) {\n                    htmlForm += ` step=\"${JSON.stringify(form['schema'][fieldID]['placeholder']).replace(/\\\"/g, '')}\"`;\n                }\n\n                //      DATAGRID\n\n                if (form['schema'][fieldID]['type']['fields']) {\n                    var dgFields = `<tr id='cols'>`;\n                    for (var fld in form['schema'][fieldID]['type']['fields']) {\n                        dgFields += `<th id='` + form['schema'][fieldID]['type']['fields'][fld]['id'] + `' `\n                            + `type='` + form['schema'][fieldID]['type']['fields'][fld]['type']['dataType'] + `' `\n                            + `description='` + form['schema'][fieldID]['type']['fields'][fld]['id'] + `'>`\n                            + form['schema'][fieldID]['type']['fields'][fld]['label'] + `</th>`;\n                    }\n                    dgFields += `</tr>`;\n\n                    if (form['schema'][fieldID]['default']) {\n                        var dgData = ``;\n                        if (form['schema'][fieldID]['default']['type'] == \"scriptAction\") {\n                            dgData += `<tr id='data' value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '\\'')}\" ></tr>`;\n                        }\n                        else {\n                            var colsLen = form['schema'][fieldID]['type']['fields'].length;\n                            var cnt = 0;\n                            for (var entity in form['schema'][fieldID]['default']) {\n                                dgData += `<tr id='data'>`;\n                                for (var data in form['schema'][fieldID]['default'][entity]) {\n                                    if (cnt < colsLen) {\n                                        dgData += `<td>` + form['schema'][fieldID]['default'][entity][data] + `</td>`;\n                                        cnt++;\n                                    }\n                                }\n                                dgData += `</tr>`;\n                            }\n                        }\n                    }\n                }\n\n                if (form['options']['externalValidations']) {\n                    for (var extVal in form['options']['externalValidations']) {\n                        for (var id in form['options']['externalValidations'][extVal]['target']) {\n                            if (fieldID == form['options']['externalValidations'][extVal]['target'][id]) {\n                                htmlForm += ` options=\"${JSON.stringify(form['options']['externalValidations'][extVal]).replace(/\\\"/g, '\\'')}\"`;\n                            }\n                        }\n                    }\n                }\n\n                htmlForm += `>`;\n                if ((fieldType == 'dropDown' || fieldType == 'multiSelect') && valueList) {\n                    htmlForm += valueList;\n                    valueList = ``;\n                }\n                //      DATAGRID\n                if (fieldType == 'datagrid') {\n                    htmlForm += dgFields;\n                    htmlForm += dgData;\n\n                }\n                htmlForm += closingTag;\n            }\n            htmlForm += `</section>`;\n        }\n        htmlForm += `</form>`;\n    }\n\n\n    htmlForm += `</div>`\n\n    try {\n        // fsys.truncateSync(pathh.join('src/app', 'app.component.html'), '');\n        fsys.writeFileSync(pathh.join('src/app', 'app.component.html'), htmlForm);\n    }\n    catch (e) {\n        console.log('ERROR importForm() writing to the app.component.html file:' + e);\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class CustFormBuilderModule { }\n"],"names":["Injectable","NgModule"],"mappings":"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"}
