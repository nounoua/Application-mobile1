{"version":3,"file":"cust-form-builder.js.map","sources":["ng://cust-form-builder/lib/actionService/action.service.ts","ng://cust-form-builder/lib/computedValueService/computed-value.service.ts","ng://cust-form-builder/lib/conditionService/condition.service.ts","ng://cust-form-builder/lib/extValidService/external-validation.service.ts","ng://cust-form-builder/lib/regexService/regex.service.ts","ng://cust-form-builder/lib/prerend.ts","ng://cust-form-builder/lib/importForm.ts","ng://cust-form-builder/lib/cust-form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService {\n\n  constructor() { }\n\n  externalAction(metadata: any, originalMethod: any) {\n    var action = \"/**\\n\";\n    var parameters = [];\n    var i = 0;\n    for (var key in metadata.parameters) {\n      action += \"* @param {\" + metadata.parameters[key] + \"} \" + key + \"\\n\";\n      parameters.push({ [key]: metadata.args[i] });\n      i++;\n    }\n    action += \"* @returns {\" + metadata.returnType + \"}\\n*/\\n(\" + originalMethod.toString() + \")();\";\n\n    return JSON.stringify({\n      actionName: metadata.actionName,\n      action: action,\n      parameters: parameters,\n      args: metadata.args\n    });\n  }\n\n\n  actionFromPackage(metadata: any) {\n    return JSON.stringify({\n      package: metadata.package,\n      parameters: metadata.parameters\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComputedValueService {\n\n  constructor() { }\n\n  concat(...values: string[]) {\n    var result = {\n      bind: {\n        values: [],\n        operator: \"concat\"\n      }\n    };\n    for (var i in values) {\n      result.bind.values.push(values[i]);\n    }\n    return JSON.stringify(result);\n  }\n\n  add(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"add\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n  substract(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"substract\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n  multiply(...values: string[]) {\n    var obj = {\n      bind: {\n        values: [],\n        operator: \"multiply\"\n      }\n    };\n    for (var i in values) {\n      obj.bind.values.push(values[i]);\n    }\n    return JSON.stringify(obj);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConditionService {\n\n  constructor() { }\n\n  condition(cond: any) {\n    var origMethod = cond.toString();\n    var lines = origMethod.substring(origMethod.indexOf(\"{\") + 1, origMethod.lastIndexOf(\"}\")).split(\"\\n\");\n    var result = [];\n    var conditionVal = null;\n    var val = null;\n\n    for (var i = 0; i < lines.length; i++) {\n      if (lines[i].trim().startsWith(\"if\")) {\n        conditionVal = lines[i].substring(lines[i].indexOf(\"\\\"\") + 1, lines[i].lastIndexOf(\"\\\"\"));\n        val = lines[i + 1].substring(lines[i + 1].indexOf(\"\\\"\") + 1, lines[i + 1].lastIndexOf(\"\\\"\"));\n\n        if (conditionVal == \"true\") {\n          conditionVal = true;\n        }\n        if (conditionVal == \"false\") {\n          conditionVal = false;\n        }\n        if (val == \"true\") {\n          val = true;\n        }\n        if (val == \"false\") {\n          val = false;\n        }\n\n        result.push({\n          [lines[i].substring(lines[i].indexOf(\".\") + 1, lines[i].lastIndexOf(\"(\"))]: {\n            [lines[i].substring(lines[i].indexOf(\"(\") + 1, lines[i].indexOf(\".\"))]:\n              conditionVal\n          },\n          value: val\n        });\n      }\n    }\n    return JSON.stringify(result);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalValidationService {\n\n  constructor() { }\n\n  externalValidation(extValObj: any){\n    //TODO: Not embedded action\n    return JSON.stringify({\n      target: extValObj.targetFields,\n      source: extValObj.validationAction,\n      label: extValObj.label\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegexService {\n\n  constructor() { }\n\n  regex(pattern: string, message?: string) {\n    return JSON.stringify({\n      pattern: {\n        value: pattern,\n        message: message || \"\"\n      }\n    });\n  }\n}\n","export function prerend() {\n    require('zone.js/dist/zone-node');\n    require('reflect-metadata');\n    const { renderModuleFactory } = require('@angular/platform-server');\n\n    const htmlparser = require(\"htmlparser2\");\n\n    // Models Declarations\n    var Layout = function () {\n        this.pages = [];\n    }\n\n    Layout.prototype.addPage = function (page) {\n        this.pages.push(page);\n    };\n\n    Layout.prototype.getPage = function (id) {\n        for (var i in this.pages) {\n            if (this.pages[i].id == id) {\n                return this.pages[i];\n            }\n        }\n        return null;\n    };\n\n    /******************************************/\n\n    var Canvas = function () {\n        this.layout = new Layout();\n        this.schema = {};\n        this.options = {};\n    };\n\n    /******************************************/\n\n    var Page = function (id, sections, title, state) {\n        this.id = id;\n        this.sections = sections;\n        this.title = title;\n        this.state = state;\n    }\n\n    Page.prototype.addSection = function (section) {\n        this.sections.push(section);\n    }\n\n    Page.prototype.getSection = function (id) {\n        for (var i in this.sections) {\n            if (this.sections[i].id == id) {\n                return this.sections[i];\n            }\n        }\n        return null;\n    }\n\n    Page.prototype.setTitle = function (title) {\n        this.title = title;\n    }\n\n    /******************************************/\n\n    var Field = function (id, display, state) {\n        this.id = id;\n        this.display = display;\n        this.state = state;\n    }\n\n    /******************************************/\n\n    var FieldSchema = function (type, constraints, label, placeholder, valueList) {\n        this.type = type;\n        this.constraints = constraints || {};\n        this.label = label || undefined;\n        this.placeholder = placeholder || undefined;\n        this.valueList = valueList || undefined;\n    }\n\n    /******************************************/\n\n    var State = function () {\n        this.visible = true;\n        this[\"read-only\"] = false;\n    }\n\n    /******************************************/\n\n    var Section = function (id, fields) {\n        this.id = id;\n        this.fields = fields;\n    }\n\n    Section.prototype.addField = function (field) {\n        this.fields.push(field);\n    }\n\n    Section.prototype.getField = function (id) {\n        for (var i in this.fields) {\n            if (this.fields[i].id == id) {\n                return this.fields[i];\n            }\n        }\n        return null;\n    }\n\n    /******************************************/\n\n    // UTILITY FUNCTIONS\n    var returnID = function (attribID, type) {\n        if (attribID == undefined || attribID == \"\") {\n            let id = type + '_', r = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (let i = 0; i < 8; i++) {\n                id += r.charAt(Math.floor(Math.random() * r.length));\n            }\n            return id;\n        }\n        else {\n            return attribID;\n        }\n    };\n\n    /******************************************/\n\n    var valueSource = function (source, fs, path) {\n        if (IsJsonString(source)) {\n            var sourceObj = JSON.parse(source);\n            if (sourceObj.hasOwnProperty('actionName')) {\n                const convert = require('xml-js');\n                try {\n                    var xml = fs.readFileSync('../pom.xml');\n                }\n                catch (e) {\n                    console.log('valueSource() reading pom.xml:' + e);\n                }\n                var options = {\n                    ignoreComment: true,\n                    compact: true,\n                    ignoreDoctype: true,\n                    ignoreCdata: true,\n                    ignoreAttributes: true,\n                    ignoreInstruction: true,\n                    ignoreDeclaration: true,\n                };\n                var parsed = convert.xml2js(xml, options);\n                var grpartID = parsed.project.groupId._text + '/' + parsed.project.artifactId._text;\n                var packageInPathFormat = grpartID.replace(/\\./g, '/') + '/';\n\n                try {\n                    fs.writeFileSync(path.join('actions/src/main/resources/' + packageInPathFormat, sourceObj.actionName + '.js'), sourceObj.action);\n                }\n                catch (e) {\n                    console.log('valueSource() writing action files:' + e)\n                }\n                var result = {\n                    type: \"scriptAction\",\n                    id: grpartID + \"/\" + sourceObj.actionName,\n                    parameters: sourceObj.parameters\n                }\n                return result;\n\n            }\n            //Check if it's a path to action\n            else if (sourceObj.hasOwnProperty('package')) {\n                return {\n                    type: \"scriptAction\",\n                    id: sourceObj.package,\n                    parameters: sourceObj.parameters\n                }\n            }\n\n            //Checks if it's condition or computed value OR it's Action From Imported Custom Form\n            else if (sourceObj.hasOwnProperty('bind') || sourceObj.hasOwnProperty('type')) {\n                return sourceObj;\n            }\n\n        }\n        // If source is some kind of const\n        if (source == \"true\") {\n            return true;\n        }\n        else if (source == \"false\") {\n            return false;\n        }\n        else if (source.startsWith(\"[{\") || source.startsWith(\"{\") || source.startsWith(\"['\")) {\n            try {\n                return JSON.parse(source.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"valueSource() ---> else if (source.startsWith...: \", e);\n            }\n\n        }\n        else if (isNaN(parseInt(source))) {\n            return source;\n        }\n        else {\n            return parseInt(source);\n        }\n    }\n\n    function IsJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    /******************************************/\n\n    const checkAttributes = function (attribs, field, id, canvas, fs, path) {\n        if (attribs.visibility) {\n            field.state.visible = valueSource(attribs.visibility, fs, path);\n        }\n        if (attribs.readonly) {\n            field.state[\"read-only\"] = valueSource(attribs.readonly, fs, path);\n        }\n        if (attribs.value) {\n            canvas.schema[id].default = valueSource(attribs.value, fs, path);\n        }\n        if (attribs.valueList) {\n\n            canvas.schema[id].valueList = valueSource(attribs.valueList, fs, path);\n        }\n        if (attribs.bind) {\n            if (attribs.bind.startsWith('{')) {\n                try {\n                    canvas.schema[id].default = {\n                        bind: JSON.parse(attribs.bind.replace(/\\'/g, '\\\"'))\n                    }\n                } catch (e) {\n                    console.log(\"checkAttributes() ---> attribs.bind\", e);\n                }\n            }\n            else {\n                canvas.schema[id].default = {\n                    bind: attribs.bind\n                }\n            }\n\n        }\n        if (attribs.signpost) {\n            canvas.schema[id].signpost = attribs.signpost;\n        }\n        if (attribs.description) {\n            canvas.schema[id].description = attribs.description;\n        }\n\n        //  Constraints\n        if (attribs.required) {\n            canvas.schema[id].constraints.required = valueSource(attribs.required, fs, path);\n        }\n        if (attribs.regex) {\n            try {\n                var regexObj = JSON.parse(attribs.regex.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"checkAttributes() ---> attribs.regex\", e);\n            }\n            // Object.assign(canvas.schema[id].constraints, regexObj);\n            canvas.schema[id].constraints[\"pattern\"] = regexObj;\n        }\n        if (attribs.min) {\n            canvas.schema[id].constraints[\"min-value\"] = valueSource(attribs.min, fs, path);\n        }\n        if (attribs.max) {\n            canvas.schema[id].constraints[\"max-value\"] = valueSource(attribs.max, fs, path);\n        }\n        if (attribs.match) {\n            canvas.schema[id].constraints.match = attribs.match;\n        }\n\n        if (!attribs.multiple || attribs.multiple == \"false\") {\n            canvas.schema[id].type.isMultiple = false;\n        }\n\n        //External Validation\n        if (attribs.options) {\n\n            try {\n                var extVal = JSON.parse(attribs.options.replace(/\\'/g, '\\\"'));\n            }\n            catch (e) {\n                console.log(\"checkAttributes() ---> attribs.options\", e);\n            }\n\n            extVal.source = valueSource(JSON.stringify(extVal.source), fs, path);\n            canvas.options[\"externalValidations\"] = [];\n            canvas.options[\"externalValidations\"].push(extVal);\n\n        }\n    }\n\n    /******************************************/\n\n    // JSON FORM GENERATION FUNCTION\n    var generateJSONForm = function (canvas, fs, path, html) {\n        canvas = new Canvas();\n        var formName = \"\";\n        var currentPage = null;\n        var currentSection = null;\n        var currentSelect = null;\n        var options = [];\n\n        //      Variables for DataGrid\n        var trID = null;\n        var dgLabels = [];\n        var dgIDs = [];\n        var dgTypes = [];\n        var dgData = [];\n        var currentDatagrid = null;\n\n\n\n        var parser = new htmlparser.Parser({\n\n            onopentag: function (name, attribs) {\n                var field = null;\n                var id = \"\";\n                var state = new State();\n\n                switch (name) {\n                    //The Form\n                    case \"div\":\n                        if (attribs.class == \"custom-form\") {\n                            formName = attribs.name;\n                        }\n                        else {\n                            formName = \"defautFormName\";\n                        }\n                        break;\n\n                    //  Page/Tab\n                    case \"form\":\n                        if (currentPage == null) {\n                            currentPage = new Page(attribs.id || \"General\", [], attribs.title || \"General\", {});\n                        } else {\n                            currentPage = new Page(returnID(attribs.id, \"page\"), [], attribs.title || \"New Tab\", {});\n                        }\n                        if (attribs.visibility) {\n                            currentPage.state.visible = valueSource(attribs.visibility, fs, path);\n                        }\n                        canvas.layout.addPage(currentPage);\n                        break;\n\n                    //  Section    \n                    case \"section\":\n                        currentSection = new Section(returnID(attribs.id, \"section\"), []);\n                        canvas.layout.getPage(currentPage.id).addSection(currentSection);\n                        break;\n\n\n                    case \"input\":\n                        switch (attribs.type) {\n\n                            //  Text Field\n                            case \"text\":\n                                id = returnID(attribs.id, \"textField\");\n                                field = new Field(id, \"textField\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n\n                            // Password Field\n                            case \"password\":\n                                id = returnID(attribs.id, \"passwordField\");\n                                field = new Field(id, \"passwordField\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"secureString\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n\n                            // Decimal or Integer Field\n                            case \"number\":\n                                if (attribs.step && attribs.step.startsWith(\"0.\")) {\n                                    id = returnID(attribs.id, \"decimalField\");\n                                    field = new Field(id, \"decimalField\", state);\n                                    canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                    canvas.schema[id] = new FieldSchema({ dataType: \"decimal\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                    checkAttributes(attribs, field, id, canvas, fs, path);\n                                    canvas.schema[id].step = parseInt(attribs.step);\n                                }\n                                else {\n                                    id = returnID(attribs.id, \"integerField\");\n                                    field = new Field(id, \"integerField\", state);\n                                    canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                    canvas.schema[id] = new FieldSchema({ dataType: \"integer\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                    checkAttributes(attribs, field, id, canvas, fs, path);\n                                    canvas.schema[id].step = parseInt(attribs.step) || 1;\n                                }\n                                break;\n\n                            // CheckBox\n\n                            case \"checkbox\":\n                                id = returnID(attribs.id, \"checkbox\");\n                                field = new Field(id, \"checkbox\", state);\n                                canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                                canvas.schema[id] = new FieldSchema({ dataType: \"boolean\" }, {}, attribs.label, attribs.placeholder, undefined);\n                                checkAttributes(attribs, field, id, canvas, fs, path);\n                                break;\n                        }\n                        break;\n\n                    //  Text Area\n                    case \"textarea\":\n                        id = returnID(attribs.id, \"textArea\");\n                        field = new Field(id, \"textArea\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Text / Label\n                    case \"label\":\n                        id = returnID(attribs.id, \"text\");\n                        field = new Field(id, \"text\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Image\n                    case \"img\":\n                        id = returnID(attribs.id, \"image\");\n                        field = new Field(id, \"image\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n\n                    //  DATAGRID\n                    case \"table\":\n                        var field = null;\n                        id = returnID(attribs.id, \"datagrid\");\n                        currentDatagrid = id;\n                        field = new Field(id, \"datagrid\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"complex\", \"fields\": [], isMultiple: true }, {}, attribs.label, attribs.placeholder, options);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    case \"tr\":\n                        trID = attribs.id;\n                        if (attribs.value) {\n                            canvas.schema[currentDatagrid].default = valueSource(attribs.value, fs, path);\n                        }\n                        // TODO: TEST\n                        break;\n\n                    case \"th\":\n                        dgIDs.push(attribs.id);\n                        dgTypes.push(attribs.type);\n                        break\n\n                    case \"td\":\n                        break;\n\n                    //  Multiselect or Dropdown\n                    case \"select\":\n\n                        if (attribs.multiple == \"true\") {\n                            currentSelect = id = returnID(attribs.id, \"multiSelect\");\n                            field = new Field(id, \"multiSelect\", state);\n                            canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                            canvas.schema[id] = new FieldSchema({ dataType: \"string\", isMultiple: true }, {}, attribs.label, attribs.placeholder, options);\n                        }\n                        else {\n                            currentSelect = id = returnID(attribs.id, \"dropDown\");\n                            field = new Field(id, \"dropDown\", state);\n                            canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                            canvas.schema[id] = new FieldSchema({ dataType: \"string\" }, {}, attribs.label, attribs.placeholder, options);\n                        }\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Value Picker\n                    case \"search\":\n                        id = returnID(attribs.id, \"valuePicker\");\n                        field = new Field(id, \"valuePicker\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"reference\", referenceType: attribs.referenceType }, {}, attribs.label, attribs.placeholder, options || []);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n\n                    //  Date Time Picker\n                    case \"date\":\n                        id = returnID(attribs.id, \"dateTime\");\n                        field = new Field(id, \"dateTime\", state);\n                        canvas.layout.getPage(currentPage.id).getSection(currentSection.id).addField(field);\n                        canvas.schema[id] = new FieldSchema({ dataType: \"dateTime\" }, {}, attribs.label, attribs.placeholder, undefined);\n                        checkAttributes(attribs, field, id, canvas, fs, path);\n                        break;\n                }\n            },\n            ontext: function (text) {\n                //      SELECT & MULTISELECT OPTIONS\n                if (currentSelect != null) {\n                    options.push(valueSource(text, fs, path));\n                }\n                //      DATAGRID\n                if (trID == \"cols\") {\n                    dgLabels.push(valueSource(text, fs, path));\n                }\n                if (trID == \"data\") {\n                    dgData.push(valueSource(text, fs, path));\n                }\n\n            },\n            onclosetag: function (tagname) {\n                if (tagname === \"select\" && options.length > 0) {\n                    canvas.schema[currentSelect].valueList = options;\n                    currentSelect = null;\n                    options = [];\n                }\n\n                //      DATAGRID\n\n                if (tagname === \"table\") {\n                    canvas.schema[currentDatagrid][\"type\"][\"fields\"] = [];\n                    canvas.schema[currentDatagrid][\"default\"] = [];\n                    for (var i in dgLabels) {\n                        canvas.schema[currentDatagrid][\"type\"][\"fields\"].push(\n                            {\n                                \"label\": dgLabels[i],\n                                \"id\": dgIDs[i],\n                                \"type\": {\n                                    \"dataType\": dgTypes[i]\n                                }\n                            });\n                    }\n                    var cnt = 0;\n                    var data = {};\n                    for (var j in dgData) {\n                        data[dgIDs[cnt]] = dgData[j];\n                        cnt++;\n                        if (cnt > 2) {\n                            cnt = 0;\n                            canvas.schema[currentDatagrid][\"default\"].push(data);\n                            data = {};\n                        }\n                    }\n\n                    currentDatagrid = null;\n                    dgIDs = [];\n                    dgData = [];\n                    dgLabels = [];\n                    dgTypes = [];\n                }\n\n            }\n\n        }, { decodeEntities: true });\n\n        parser.write(html);\n        parser.end();\n\n        return {\n            name: formName,\n            form: canvas\n        };\n\n\n    }\n\n\n    /******************************************/\n\n    // PRERENDER\n    const fs = require('fs');\n    const path = require('path');\n    const { AppServerModuleNgFactory } = require('../../../dist/custom-form-server/main');\n\n    renderModuleFactory(AppServerModuleNgFactory, {\n        document: '<app-root></app-root>',\n        url: '/'\n    })\n        .then(html => {\n            var generated = generateJSONForm(canvas, fs, path, html);\n            var canvas = generated.form;\n            var name = generated.name;\n            try {\n                fs.writeFileSync(path.join('bin/', name + '.json'), JSON.stringify(canvas));\n            }\n            catch (e) {\n                console.log('renderModuleFactory creating the custom form json file: ' + e);\n            }\n        })\n        .catch((err) => {\n            console.log(err.message)\n        });\n}\n","export function importForm(formPath) {\n    const fsys = require('fs');\n    const pathh = require('path');\n\n    try {\n        var form = JSON.parse(fsys.readFileSync(`${formPath}.json`, 'utf8'));\n    }\n    catch (e) {\n        console.log('ERROR importForm() reading the custom form json file :' + e);\n    }\n    var htmlForm = `<div class=\"custom-form\" name=\"${formPath.substring(formPath.lastIndexOf('/') + 1)}\">`;\n\n    for (var page in form['layout']['pages']) {\n        htmlForm += `<form id=\"${form['layout']['pages'][page]['id']}\" title=\"${form['layout']['pages'][page]['title']}\"`;\n        if (form['layout']['pages'][page]['state']['visible']) {\n            htmlForm += ` visibility=\"${form['layout']['pages'][page]['state']['visible']}\"`;\n        }\n        htmlForm += `>`;\n        for (var section in form['layout']['pages'][page]['sections']) {\n            htmlForm += `<section id=\"${form['layout']['pages'][page]['sections'][section]['id']}\">`;\n            for (var field in form['layout']['pages'][page]['sections'][section]['fields']) {\n\n                var fieldID = form['layout']['pages'][page]['sections'][section]['fields'][field]['id'];\n                var basicAttributes = `id=\"${fieldID}\"\n                    visibility=\"${JSON.stringify(form['layout']['pages'][page]['sections'][section]['fields'][field]['state']['visible']).replace(/\\\"/g, '\\'')}\"\n                    readonly=\"${JSON.stringify(form['layout']['pages'][page]['sections'][section]['fields'][field]['state']['read-only']).replace(/\\\"/g, '\\'')}\"`;\n                var closingTag = ``;\n                var fieldType = form['layout']['pages'][page]['sections'][section]['fields'][field]['display'];\n\n\n                switch (fieldType) {\n                    case 'text':\n                        htmlForm += `<label ` + basicAttributes;\n                        closingTag = `</label>`\n                        break;\n                    case 'textArea':\n                        htmlForm += `<textarea ` + basicAttributes;\n                        closingTag = `</textarea>`;\n                        break;\n                    case 'textField':\n                        htmlForm += `<input type=\"text\" ` + basicAttributes;\n                        break;\n                    case 'passwordField':\n                        htmlForm += `<input type=\"password\" ` + basicAttributes;\n                        break;\n                    case 'decimalField':\n                        htmlForm += `<input type=\"number\" step =\"0.\"` + basicAttributes;\n                        break;\n                    case 'integerField':\n                        htmlForm += `<input type=\"number\" ` + basicAttributes;\n                        break;\n                    case 'image':\n                        htmlForm += `<img ` + basicAttributes;\n                        break;\n                    case 'checkbox':\n                        htmlForm += `<input type=\"checkbox\" ` + basicAttributes;\n                        break;\n                    case 'dropDown':\n                        htmlForm += `<select ` + basicAttributes;\n                        closingTag = `</select>`\n                        break;\n                    case 'multiSelect':\n                        htmlForm += `<select multiple=\"true\" ` + basicAttributes;\n                        closingTag = `</select>`\n                        break;\n                    case 'datagrid':\n                        htmlForm += `<table ` + basicAttributes;\n                        closingTag = `</table>`\n                        break;\n                }\n\n                if (form['schema'][fieldID]['constraints']) {\n                    if (form['schema'][fieldID]['constraints']['required']) {\n                        htmlForm += ` required=\"${JSON.stringify(form['schema'][fieldID]['constraints']['required']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['min-value']) {\n                        htmlForm += ` min=\"${JSON.stringify(form['schema'][fieldID]['constraints']['min-value']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['max-value']) {\n                        htmlForm += ` max=\"${JSON.stringify(form['schema'][fieldID]['constraints']['max-value']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['pattern']) {\n                        htmlForm += ` regex=\"${JSON.stringify({\n                            value: form['schema'][fieldID]['constraints']['pattern']['value'],\n                            message: form['schema'][fieldID]['constraints']['pattern']['message']\n                        }).replace(/\\\"/g, '\\'')}\"`;\n                    }\n                    if (form['schema'][fieldID]['constraints']['match']) {\n                        htmlForm += ` match=\"${JSON.stringify(form['schema'][fieldID]['constraints']['match']).replace(/\\\"/g, '\\'')}\"`;\n                    }\n\n                }\n                if (form['schema'][fieldID]['default']) {\n                    if (form['schema'][fieldID]['default']['type'] == 'scriptAction' ||\n                        Array.isArray(form['schema'][fieldID]['default'])) {\n                        htmlForm += ` value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '\\'')}\"`;\n                        // .replace(/\\{/g, '{{ \\'{\\' }}').replace(/\\}/g, '{{ \\'}\\' }}')}\"`;\n                    }\n                    else if (form['schema'][fieldID]['default']['bind']) {\n                        if (JSON.stringify(form['schema'][fieldID]['default']['bind']).startsWith('{')) {\n                            htmlForm += ` bind=\"${JSON.stringify(form['schema'][fieldID]['default']['bind']).replace(/\\\"/g, '\\'')}\"`;\n                        }\n                        else {\n                            htmlForm += ` bind=\"${JSON.stringify(form['schema'][fieldID]['default']['bind']).replace(/\\\"/g, '')}\"`;\n                        }\n\n                    }\n                    else {\n                        htmlForm += ` value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '')}\"`;\n                    }\n                }\n                if (form['schema'][fieldID]['valueList']) {\n\n                    if (form['schema'][fieldID]['valueList']['type'] == 'scriptAction') {\n                        htmlForm += ` valueList=\"${JSON.stringify(form['schema'][fieldID]['valueList']).replace(/\\\"/g, '\\'')}\"`;\n                        // .replace(/\\{/g, '{{ \\'{\\' }}').replace(/\\}/g, '{{ \\'}\\' }}')}\"`;\n                    }\n                    else {\n                        var valueList = ``;\n                        for (var opt in form['schema'][fieldID]['valueList']) {\n                            if (form['schema'][fieldID]['valueList'][opt]['label']) {\n                                valueList += `<option label=\"${form['schema'][fieldID]['valueList'][opt]['label']}\">${form['schema'][fieldID]['valueList'][opt]['label']}</option>`;\n                            }\n                            else {\n                                valueList += `<option>${JSON.stringify(form['schema'][fieldID]['valueList'][opt]).replace(/\\\"/g, '')}</option>`;\n                            }\n\n                        }\n                    }\n\n                }\n\n                if (form['schema'][fieldID]['label']) {\n                    htmlForm += ` label=\"${form['schema'][fieldID]['label']}\"`;\n                }\n                if (form['schema'][fieldID]['description']) {\n                    htmlForm += ` description=\"${JSON.stringify(form['schema'][fieldID]['description']).replace(/\\\"/g, '')}\"`;\n                }\n                if (form['schema'][fieldID]['signpost']) {\n                    htmlForm += ` signpost=\"${JSON.stringify(form['schema'][fieldID]['signpost']).replace(/\\\"/g, '\\'')}\"`;\n                }\n                if (form['schema'][fieldID]['step']) {\n                    htmlForm += ` step=\"${JSON.stringify(form['schema'][fieldID]['step']).replace(/\\\"/g, '\\'')}\"`;\n                }\n                if (form['schema'][fieldID]['placeholder']) {\n                    htmlForm += ` step=\"${JSON.stringify(form['schema'][fieldID]['placeholder']).replace(/\\\"/g, '')}\"`;\n                }\n\n                //      DATAGRID\n\n                if (form['schema'][fieldID]['type']['fields']) {\n                    var dgFields = `<tr id='cols'>`;\n                    for (var fld in form['schema'][fieldID]['type']['fields']) {\n                        dgFields += `<th id='` + form['schema'][fieldID]['type']['fields'][fld]['id'] + `' `\n                            + `type='` + form['schema'][fieldID]['type']['fields'][fld]['type']['dataType'] + `' `\n                            + `description='` + form['schema'][fieldID]['type']['fields'][fld]['id'] + `'>`\n                            + form['schema'][fieldID]['type']['fields'][fld]['label'] + `</th>`;\n                    }\n                    dgFields += `</tr>`;\n\n                    if (form['schema'][fieldID]['default']) {\n                        var dgData = ``;\n                        if (form['schema'][fieldID]['default']['type'] == \"scriptAction\") {\n                            dgData += `<tr id='data' value=\"${JSON.stringify(form['schema'][fieldID]['default']).replace(/\\\"/g, '\\'')}\" ></tr>`;\n                        }\n                        else {\n                            var colsLen = form['schema'][fieldID]['type']['fields'].length;\n                            var cnt = 0;\n                            for (var entity in form['schema'][fieldID]['default']) {\n                                dgData += `<tr id='data'>`;\n                                for (var data in form['schema'][fieldID]['default'][entity]) {\n                                    if (cnt < colsLen) {\n                                        dgData += `<td>` + form['schema'][fieldID]['default'][entity][data] + `</td>`;\n                                        cnt++;\n                                    }\n                                }\n                                dgData += `</tr>`;\n                            }\n                        }\n                    }\n                }\n\n                if (form['options']['externalValidations']) {\n                    for (var extVal in form['options']['externalValidations']) {\n                        for (var id in form['options']['externalValidations'][extVal]['target']) {\n                            if (fieldID == form['options']['externalValidations'][extVal]['target'][id]) {\n                                htmlForm += ` options=\"${JSON.stringify(form['options']['externalValidations'][extVal]).replace(/\\\"/g, '\\'')}\"`;\n                            }\n                        }\n                    }\n                }\n\n                htmlForm += `>`;\n                if ((fieldType == 'dropDown' || fieldType == 'multiSelect') && valueList) {\n                    htmlForm += valueList;\n                    valueList = ``;\n                }\n                //      DATAGRID\n                if (fieldType == 'datagrid') {\n                    htmlForm += dgFields;\n                    htmlForm += dgData;\n\n                }\n                htmlForm += closingTag;\n            }\n            htmlForm += `</section>`;\n        }\n        htmlForm += `</form>`;\n    }\n\n\n    htmlForm += `</div>`\n\n    try {\n        // fsys.truncateSync(pathh.join('src/app', 'app.component.html'), '');\n        fsys.writeFileSync(pathh.join('src/app', 'app.component.html'), htmlForm);\n    }\n    catch (e) {\n        console.log('ERROR importForm() writing to the app.component.html file:' + e);\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class CustFormBuilderModule { }\n"],"names":[],"mappings":"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"}
